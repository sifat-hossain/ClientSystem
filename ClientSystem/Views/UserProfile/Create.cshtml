@model ClientSystem.Models.UserProfile

@{
    ViewBag.Title = "Create";
}

<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="content"style="text-align:center;margin-left:200px">
        <div class="row">
            <!-- left column -->
            <div class="col-md-6">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">User Registration</h3>
                    </div>
                    <form role="form">
                        <div class="box-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div>
                                    @Html.EditorFor(model => model.UserFirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserFirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div>
                                    @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserLastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UaserAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div>
                                    @Html.EditorFor(model => model.UaserAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UaserAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div>
                                    @Html.EditorFor(model => model.UserPhone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserPhone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div>
                                    @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control", @id = "email", @onkeyup = "ClearMessage()" } })
                                    @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                                    <span id="message"></span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserDOB, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div>
                                    @Html.EditorFor(model => model.UserDOB, new { htmlAttributes = new { @class = "form-control",@min = "01/01/2006", @max = Convert.ToString(System.DateTime.Now) } })
                                    @Html.ValidationMessageFor(model => model.UserDOB, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div>
                                    @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" onclick="CheckAvailability()" value="Create" class="btn btn-default pull-left" />
                                    <input type="button" onclick="Action("","")" value="Cancel" class="btn btn-default pull-right" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    function CheckAvailability() {
        var email = $("#email").val();
        $.ajax({
            type: "POST",
            url: "/UserProfile/CheckEmail",
            data: '{email: "' + email + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                var message = $("#message");
                if (response) {
                   
                    message.css("color", "Red");
                    message.html("This Email is Already Registered");
                }
                
            }
        });
    };

    function ClearMessage() {
        $("#message").html("");
    };
</script>